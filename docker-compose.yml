version: '3.4'

services:
  platformrecommendation:
    image: node
    build:
      context: .
      dockerfile: node/Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - PYTHON_HOST=${PYTHON_HOST}
      - PYTHON_PORT=${PYTHON_PORT}
      - PORT=${PORT}
    ports:
      - "${PORT}:${PORT}"
    restart: unless-stopped
    depends_on:
        - db
        - python
    # deploy:
    #   replicas: 1                      # Số lượng container cho dịch vụ
    #   resources:                        # Thiết lập tài nguyên
    #     limits:                         # Giới hạn tài nguyên
    #       cpus: '0.5'                  # 50% của 1 Core
    #       memory: 150MB
    #     reservations:                   # Tài nguyên tối thiểu
    #       cpus: '0.5'
    #       memory: 50MB
    #   restart_policy:
    #     condition: on-failure
  db:
    image: mongo
    volumes:
      - mongodata:/data/db
    restart: unless-stopped
    ports: 
      - "27017:27017"
    # deploy:
    #   replicas: 1    
    #   resources: 
    #     limits:    
    #       cpus: '0.5'            
    #       memory: 150MB
    #     reservations:       
    #       cpus: '0.5'
    #       memory: 50MB
    #   restart_policy:
    #     condition: on-failure
  python:
    image: python
    build: 
      context: .
      dockerfile: python/Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    command: python manage.py runserver 0.0.0.0:8000
    ports: 
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - db
    # deploy:
    #   replicas: 1
    #   resources: 
    #     limits:    
    #       cpus: '1'            
    #       memory: 500MB
    #     reservations:       
    #       cpus: '1'
    #       memory: 250MB
    #   restart_policy:
    #     condition: on-failure

volumes:
  mongodata:
